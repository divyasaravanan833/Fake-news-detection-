# -*- coding: utf-8 -*-
"""Untitled16.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1UVQu4clDbyKVrhxd93ngTNq_SkvTWDz1
"""

import pandas as pd
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import classification_report

# Sample data directly in code
data = {
    'text': [
        'NASA confirms water on the moon.',
        'You can lose 20 pounds in a week with this pill!',
        'Local man wins lottery twice in one day.',
        'Aliens built the pyramids, expert says.',
        'New study shows coffee reduces heart disease.',
        'Secret government experiments revealed by insider.'
    ],
    'label': ['REAL', 'FAKE', 'REAL', 'FAKE', 'REAL', 'FAKE']
}

# Create a DataFrame
df = pd.DataFrame(data)

# Preprocessing
X = df['text']
y = df['label']

# Split data
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.5, random_state=0)

# Vectorize text
vectorizer = TfidfVectorizer(stop_words='english')
X_train_vec = vectorizer.fit_transform(X_train)
X_test_vec = vectorizer.transform(X_test)

# Train model
model = LogisticRegression()
model.fit(X_train_vec, y_train)

# Make predictions
y_pred = model.predict(X_test_vec)

# Show evaluation
print(classification_report(y_test, y_pred))

# Count predictions for plotting
prediction_counts = pd.Series(y_pred).value_counts()

# Plotting
plt.figure(figsize=(6, 4))
prediction_counts.plot(kind='bar', color=['red', 'green'])
plt.title('Fake vs Real News Predictions')
plt.xlabel('News Type')
plt.ylabel('Number of Articles')
plt.xticks(rotation=0)
plt.tight_layout()
plt.grid(axis='y')
plt.show()